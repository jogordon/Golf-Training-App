package models;

import java.util.Collections;

public class GameScenario extends Scenario {

	/****************** attributes ***********************/
	Flag flag;
	/****************** attributes ends ******************/

	/****************** constructors *********************/
	// To do: Code here
	/****************** constructors ends ****************/

	/****************** private methods ******************/
	@Override
	protected void setup(){
		// add flag
		flag = new Flag(new Position(0,0,200), 1,4);
		this.plotElements.add(flag);
		// add orcs
		Orc orc1 = new Orc(10, new Position(-16, 0, 151), 1, 1);
		this.plotElements.add(orc1);
		Orc orc = new Orc(10, new Position(-10, 0, 89), 1, 1);
		this.plotElements.add(orc);
		
		super.setup();
		
	}
	/****************** private methods ends *************/

	/****************** properties ***********************/
	// To do: setters and getters code here
	/****************** properties ends ******************/

	/****************** public methods *******************/
	@Override
	public void tickAction() {
		// track activated ball status
		if (this.activatedBall != null) {
			if (this.activatedBall.getLanded()) { // landed, create a new one
				// randomly generate trajectory for the ball
				this.addNewBall();
			}
		} else {
			this.addNewBall();
		}
		
		super.tickAction();
	}
	
	public double getBallLandedDistanceToFlag(){
		Position p = this.activatedBall.getLastPosition();
		double square=  Math.pow(p.x - this.flag.getPosition().x, 2) + Math.pow(p.z-this.flag.getPosition().z, 2);
		return Math.pow(square, 0.5);
	}
	/****************** public methods ends **************/

}
