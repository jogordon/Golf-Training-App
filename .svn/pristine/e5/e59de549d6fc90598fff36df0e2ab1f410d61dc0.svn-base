package views;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import controllers.AAnimationScreenController;
import net.miginfocom.swing.MigLayout;
import service.Database;
import service.ImageService;
import models.GameRecord;

public class HighScoreScreen extends AAnimationScreen {

	/****************** attributes ***********************/

	private static final long serialVersionUID = -3148037149005849890L;

	final Dimension SIZE = new Dimension(400, 400);
	JLabel title;

	/****************** attributes ends ******************/

	/****************** constructors *********************/
	public HighScoreScreen(AAnimationScreenController controller) {
		super(controller);
		backPanel.setLayout(new BorderLayout());
		backPanel.add(this.animationView, BorderLayout.CENTER);
		
		this.frontPanel.setLayout(new MigLayout("","8%[grow]8%","[][grow][]"));	
		JLabel lblHeader = new JLabel("High Score");
		lblHeader.setFont(new Font("Arial", Font.BOLD, 50));
		lblHeader.setForeground(Color.GREEN);
		this.frontPanel.add(lblHeader, "center, wrap"); // expend to fill top. wrap: end of this row in front panel
		JScrollPane scrollPanel = new JScrollPane();
		this.frontPanel.add(scrollPanel,"grow, wrap");
		this.frontPanel.add(btnMainMenu ,"align left");

	}

	/****************** constructors ends ****************/

	/****************** private methods ******************/
	private JTable createHighScoreTable() {
		List<GameRecord> highscores = Database.getInstance().getHighScores(5);
		String[] colNames = { "USER", "HIGHSCORE", "DATE" };
		DefaultTableModel tableModel = new DefaultTableModel(colNames, 10);

		System.out.println(highscores.size());

		Object[][] gameRecordInfo = {
				{ ((GameRecord) highscores.get(0)).getUser().getName(),
						((GameRecord) highscores.get(0)).getScore(),
						((GameRecord) highscores.get(0)).getDate() },
				{ ((GameRecord) highscores.get(1)).getUser().getName(),
						((GameRecord) highscores.get(1)).getScore(),
						((GameRecord) highscores.get(1)).getDate() },

				{ ((GameRecord) highscores.get(2)).getUser().getName(),
						((GameRecord) highscores.get(2)).getScore(),
						((GameRecord) highscores.get(2)).getDate() },
				{ ((GameRecord) highscores.get(3)).getUser().getName(),
						((GameRecord) highscores.get(3)).getScore(),
						((GameRecord) highscores.get(3)).getDate() },
				{ ((GameRecord) highscores.get(4)).getUser().getName(),
						((GameRecord) highscores.get(4)).getScore(),
						((GameRecord) highscores.get(4)).getDate() } };

		JTable highScoreTable = new JTable(gameRecordInfo, colNames);

		return highScoreTable;

	}

	private JPanel createHighScorePanel() {
		JPanel highscrPanel = new JPanel();
		JTable hsTable = createHighScoreTable();
		hsTable.enable(false);
		highscrPanel.enable(false);
		highscrPanel.setLayout(new BorderLayout());
		highscrPanel.add(hsTable.getTableHeader(), BorderLayout.PAGE_START);
		highscrPanel.add(hsTable, BorderLayout.CENTER);
		hsTable.getTableHeader().setBackground(Color.GREEN);
		hsTable.getTableHeader().setForeground(Color.DARK_GRAY);
		hsTable.getTableHeader().enable(false);
		hsTable.setBackground(Color.DARK_GRAY);
		hsTable.setForeground(Color.GREEN);

		return highscrPanel;

	}

	/****************** private methods ends *************/

	/****************** properties ***********************/
	// To do: setters and getters code here
	/****************** properties ends ******************/

	/****************** public methods *******************/
//	@Override
//	protected void paintComponent(Graphics g) {
//		super.paintComponent(g);
//		g.drawImage(ImageService.getBackground(), 0, 0, getWidth(),
//				getHeight(), null);
//	}
	/****************** public methods ends **************/
}



